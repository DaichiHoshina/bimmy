version: 2.1
jobs:
  checkout_code:
    docker:
      - image: circleci/ruby:2.6.2-node-browsers-legacy
    working_directory: ~/repo
    steps:
      - checkout

  rspec:
    docker:
      - image: circleci/ruby:2.6.2-node-browsers-legacy
        environment:
          RAILS_ENV: test
          POSTGRES_HOST: 127.0.0.1
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: myapp_test
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      # Rspec
      - run:
          name: Rspec
          command: bundle exec rspec

  deploy:
    docker:
      - image: circleci/ruby:2.6.2-node-browsers-legacy
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "build docker image"
          command: |
              docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
              docker pull registry.heroku.com/${HEROKU_APP_NAME}/web
              docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          # HEROKU_AUTH_TOKEN is generated by `heroku auth:token`
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
            bash .circleci/heroku-container-release.sh
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}
workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - checkout_code
      - rspec:
          requires:
            - checkout_code
            filters:
            branches:
              only: master
      - deploy:
          requires:
            - checkout_code
          filters:
            branches:
              only: master
